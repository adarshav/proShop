{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\Project\\\\Proshop-MERN\\\\frontend\\\\src\\\\Screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Form, Card, Button } from 'react-bootstrap';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport Message from '../components/Message';\n\nconst CartScreen = ({\n  history,\n  match,\n  location\n}) => {\n  _s();\n\n  const productId = match.params.id; // this is to get the query string mentioned in url //output will be ?qty=1\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1; //taking out the ?qty= and we want only after equals\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart; // console.log(cartItems);\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  });\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkOutHandler = () => {};\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Shopping List\"), cartItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Your Cart is empty \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  }, \"Go Back\")) : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, cartItems.map(item => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: item.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"Rs \", item.price), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: item.qty,\n    onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, x + 1)))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"light\",\n    onClick: () => removeFromCartHandler(item.product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Subtotal (\", cartItems.reduce((acc, item) => acc + item.qty, 0), \") items\"), \"Rs\", cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn-block\",\n    disabled: cartItems.length === 0,\n    onClick: checkOutHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Proceed To CheckOut\"))))));\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["E:/code/Project/Proshop-MERN/frontend/src/Screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Row","Col","ListGroup","Image","Form","Card","Button","addToCart","removeFromCart","Message","CartScreen","history","match","location","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","removeFromCartHandler","checkOutHandler","length","map","item","product","image","name","price","e","target","value","Array","countInStock","keys","x","reduce","acc","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Card,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nimport Message from '../components/Message';\r\n\r\nconst CartScreen = ({ history, match, location }) => {\r\n  const productId = match.params.id;\r\n  // this is to get the query string mentioned in url //output will be ?qty=1\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1; //taking out the ?qty= and we want only after equals\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  // console.log(cartItems);\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  });\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkOutHandler = () => {};\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping List</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your Cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} fluid rounded></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>Rs {item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              Rs\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkOutHandler}\r\n              >\r\n                Proceed To CheckOut\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}